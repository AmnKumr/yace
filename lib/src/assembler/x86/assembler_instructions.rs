/*
 * Permission is hereby granted, free of charge, to any human obtaining a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify,
 * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit humans to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

// We are implementing two-level scheme with a set of РѓЊРѓЊРѓЊ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ traits and a set of РѓЊРѓЊРѓЊ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­Юњј­ЮњЉ­ЮњЇ­Юњє­Юњј­Юњє­ЮњЈ­ЮњЋ­Юњѓ­ЮњЋ­Юњі­Юњљ­ЮњЈ
// traits.
//
// This allows us to avoid combinatiorial explosion: there are more than dozen of types which may represent just general purpose
// register argument and for three-argument instruction it would mean there are almost two thousand variants.
//
// РѓЊРѓЊРѓЊ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ uses traits below to convert arguments to less diverse set and then РѓЊРѓЊРѓЊ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­Юњј­ЮњЉ­ЮњЇ­Юњє­Юњј­Юњє­ЮњЈ­ЮњЋ­Юњѓ­ЮњЋ­Юњі­Юњљ­ЮњЈ
// implement the remaining combinations.
//
// If all arguments would be handled identically, then of course, it wouldn't make much sense to even have these two levels.
// Instead some instructions use not ­Юњѕ­Юњє­ЮњЈ­Юњє­ЮњЊ­Юњі­Юњё_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ trait, but more specialized conversion traits.
//
// E.g. shift instructions use ­Юњћ­ЮњЅ­Юњі­ЮњЄ­ЮњЋ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ trait which only support i8 and ­Юљю­Юље­Юљ«­ЮљД­ЮљГ­Юљъ­ЮљФ_­ЮљФ­Юљъ­Юља­Юљб­Юљг­ЮљГ­Юљъ­ЮљФ_8рхЄРЂ▒рхЌ arguments (and they
// just accept them without conversion).
//
// Thus way we both avoid the combinatorial explosion and guarantee that incorrect registers are excluded during the compilation
// time. Not only this makes debugging easier, this also means that we can stol thinking about reporting these particular errors.
//
// Note: Even with this approach we have some extra variants to implement (e.g. add have separate version for accumulator and
// ­Юљџ­Юљю­Юљю­Юљ«­Юљд­Юљ«­ЮљЦ­Юљџ­ЮљГ­Юље­ЮљФ and ­Юља­ЮљЕ_­ЮљФ­Юљъ­Юља­Юљб­Юљг­ЮљГ­Юљъ­ЮљФ because there are special version for ­Юљџ­Юљю­Юљю­Юљ«­Юљд­Юљ«­ЮљЦ­Юљџ­ЮљГ­Юље­ЮљФ and immediate, but overral it's less than 2x
// superfluous instructions.  This is considered acceptable.

use super::­ЮЌХ­ЮЌ║­ЮЌй­ЮЌ╣­ЮЌ▓­ЮЌ║­ЮЌ▓­ЮЌ╗­ЮўЂ­ЮЌ«­ЮўЂ­ЮЌХ­ЮЌ╝­ЮЌ╗::­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњљ­ЮњЄ_8рхЄРЂ▒рхЌ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ;
use super::­ЮЌХ­ЮЌ║­ЮЌй­ЮЌ╣­ЮЌ▓­ЮЌ║­ЮЌ▓­ЮЌ╗­ЮўЂ­ЮЌ«­ЮўЂ­ЮЌХ­ЮЌ╝­ЮЌ╗::­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњћ­Юњє­ЮњЉ­Юњѓ­ЮњЊ­Юњѓ­ЮњЋ­Юњє_­Юњѓ­Юњё­Юњё­Юњќ­Юњј­Юњќ­ЮњЇ­Юњѓ­ЮњЋ­Юњљ­ЮњЊ;

pub trait ­Юњѓ­ЮњЁ­ЮњЁ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­Юњј­ЮњЉ­ЮњЇ­Юњє­Юњј­Юњє­ЮњЈ­ЮњЋ­Юњѓ­ЮњЋ­Юњі­Юњљ­ЮњЈ<­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй_­ЮЊй­ЮЊЙ­ЮЊ╣­ЮЊх­ЮЊ«> {
    type ­ЮљФ­Юљъ­Юљг­Юљ«­ЮљЦ­ЮљГ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ;
    type ­Юљъ­ЮљФ­ЮљФ­Юље­ЮљФ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ;
    fn add_impl(
        &mut self,
        arguments: ­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй_­ЮЊй­ЮЊЙ­ЮЊ╣­ЮЊх­ЮЊ«,
    ) -> Result<Self::­ЮљФ­Юљъ­Юљг­Юљ«­ЮљЦ­ЮљГ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ, Self::­Юљъ­ЮљФ­ЮљФ­Юље­ЮљФ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ>;
}

pub trait ­Юњѓ­ЮњЁ­ЮњЁ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ<­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй_­ЮЊй­ЮЊЙ­ЮЊ╣­ЮЊх­ЮЊ«> {
    type ­ЮљФ­Юљъ­Юљг­Юљ«­ЮљЦ­ЮљГ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ;
    type ­Юљъ­ЮљФ­ЮљФ­Юље­ЮљФ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ;
    fn add(
        &mut self,
        arguments: ­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй_­ЮЊй­ЮЊЙ­ЮЊ╣­ЮЊх­ЮЊ«,
    ) -> Result<Self::­ЮљФ­Юљъ­Юљг­Юљ«­ЮљЦ­ЮљГ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ, Self::­Юљъ­ЮљФ­ЮљФ­Юље­ЮљФ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ>;
}

impl<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«, ­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй1_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«, ­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй2_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«> ­Юњѓ­ЮњЁ­ЮњЁ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ<(­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй1_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«, ­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй2_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«)>
for ­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«
where ­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй1_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«: ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњћ­Юњє­ЮњЉ­Юњѓ­ЮњЊ­Юњѓ­ЮњЋ­Юњє_­Юњѓ­Юњё­Юњё­Юњќ­Юњј­Юњќ­ЮњЇ­Юњѓ­ЮњЋ­Юњљ­ЮњЊ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>,
      ­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй2_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«: ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњљ­ЮњЄ_8рхЄРЂ▒рхЌ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>,
      ­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«: ­Юњѓ­ЮњЁ­ЮњЁ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­Юњј­ЮњЉ­ЮњЇ­Юњє­Юњј­Юњє­ЮњЈ­ЮњЋ­Юњѓ­ЮњЋ­Юњі­Юњљ­ЮњЈ<
          (<­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй1_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњћ­Юњє­ЮњЉ­Юњѓ­ЮњЊ­Юњѓ­ЮњЋ­Юњє_­Юњѓ­Юњё­Юњё­Юњќ­Юњј­Юњќ­ЮњЇ­Юњѓ­ЮњЋ­Юњљ­ЮњЊ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>>::­ЮљГ­Юљџ­ЮљФ­Юља­Юљъ­ЮљГ,
           <­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй2_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњљ­ЮњЄ_8рхЄРЂ▒рхЌ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>>::­ЮљГ­Юљџ­ЮљФ­Юља­Юљъ­ЮљГ)>
{
    #[allow(clippy::type_complexity)]
    type ­ЮљФ­Юљъ­Юљг­Юљ«­ЮљЦ­ЮљГ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ = <­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­ЮњЁ­ЮњЁ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­Юњј­ЮњЉ­ЮњЇ­Юњє­Юњј­Юњє­ЮњЈ­ЮњЋ­Юњѓ­ЮњЋ­Юњі­Юњљ­ЮњЈ<
        (<­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй1_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњћ­Юњє­ЮњЉ­Юњѓ­ЮњЊ­Юњѓ­ЮњЋ­Юњє_­Юњѓ­Юњё­Юњё­Юњќ­Юњј­Юњќ­ЮњЇ­Юњѓ­ЮњЋ­Юњљ­ЮњЊ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>>::­ЮљГ­Юљџ­ЮљФ­Юља­Юљъ­ЮљГ,
         <­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй2_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњљ­ЮњЄ_8рхЄРЂ▒рхЌ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>>::­ЮљГ­Юљџ­ЮљФ­Юља­Юљъ­ЮљГ)>>::­ЮљФ­Юљъ­Юљг­Юљ«­ЮљЦ­ЮљГ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ;
    #[allow(clippy::type_complexity)]
    type ­Юљъ­ЮљФ­ЮљФ­Юље­ЮљФ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ = <­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­ЮњЁ­ЮњЁ_­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњі­Юњј­ЮњЉ­ЮњЇ­Юњє­Юњј­Юњє­ЮњЈ­ЮњЋ­Юњѓ­ЮњЋ­Юњі­Юњљ­ЮњЈ<
        (<­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй1_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњћ­Юњє­ЮњЉ­Юњѓ­ЮњЊ­Юњѓ­ЮњЋ­Юњє_­Юњѓ­Юњё­Юњё­Юњќ­Юњј­Юњќ­ЮњЇ­Юњѓ­ЮњЋ­Юњљ­ЮњЊ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>>::­ЮљГ­Юљџ­ЮљФ­Юља­Юљъ­ЮљГ,
         <­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй2_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњљ­ЮњЄ_8рхЄРЂ▒рхЌ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>>::­ЮљГ­Юљџ­ЮљФ­Юља­Юљъ­ЮљГ)>>::­Юљъ­ЮљФ­ЮљФ­Юље­ЮљФ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ;
    #[inline(always)]
    fn add(&mut self, (argument1, argument2): (­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй1_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«, ­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй2_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«)) -> Result<Self::­ЮљФ­Юљъ­Юљг­Юљ«­ЮљЦ­ЮљГ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ, Self::­Юљъ­ЮљФ­ЮљФ­Юље­ЮљФ_­ЮљГ­Юљ▓­ЮљЕ­Юљъ> {
        let argument1_impl: <­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй1_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњћ­Юњє­ЮњЉ­Юњѓ­ЮњЊ­Юњѓ­ЮњЋ­Юњє_­Юњѓ­Юњё­Юњё­Юњќ­Юњј­Юњќ­ЮњЇ­Юњѓ­ЮњЋ­Юњљ­ЮњЊ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>>::­ЮљГ­Юљџ­ЮљФ­Юља­Юљъ­ЮљГ = argument1.into();
        let argument2_impl: <­ЮЊф­ЮЊ╗­ЮЊ░­ЮЊЙ­ЮЊХ­ЮЊ«­ЮЊи­ЮЊй2_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ« as ­Юњѓ­Юњћ­Юњћ­Юњє­Юњј­ЮњЃ­ЮњЇ­Юњє­ЮњЊ_­Юњѓ­ЮњЊ­Юњѕ­Юњќ­Юњј­Юњє­ЮњЈ­ЮњЋ_­Юњљ­ЮњЄ_8рхЄРЂ▒рхЌ_­Юњі­ЮњЈ­Юњћ­ЮњЋ­ЮњЊ­Юњќ­Юњё­ЮњЋ­Юњі­Юњљ­ЮњЈ<­ЮЊф­ЮЊ╝­ЮЊ╝­ЮЊ«­ЮЊХ­ЮЊФ­ЮЊх­ЮЊ«­ЮЊ╗_­ЮЊй­Юћѓ­ЮЊ╣­ЮЊ«>>::­ЮљГ­Юљџ­ЮљФ­Юља­Юљъ­ЮљГ = argument2.into();
        self.add_impl((argument1_impl, argument2_impl))
    }
}
