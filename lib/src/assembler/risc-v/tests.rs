/*
 * Permission is hereby granted, free of charge, to any human obtaining a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify,
 * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit humans to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐁_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;
use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐜𝐬𝐫_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;
use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐈_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;
use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐉_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;
use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐏_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;
use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;
use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐬𝐡𝐢𝐟𝐭_𝐑𝐕𝟑𝟐_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;
use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐬𝐡𝐢𝐟𝐭_𝐑𝐕𝟔𝟒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;
use super::𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲𝘀::𝐔_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞;

macro_rules! 𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓 {
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident const $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt None) => {
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶: u32 = $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶;
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮: i32 = 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32;
       if 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮 as u32 == 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 {
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭 = $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮);
           assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭, None);
       }
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident extra $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮_𝓯𝓲𝓷𝓪𝓵:tt $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt None) => {
       // No additional tests here.
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮:ident signed $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt None) => {
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶: u32 = $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶;
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮: $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮 = 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32 as $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮;
       if 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮 as u32 == 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 {
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭 = $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮);
           assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭, None);
       }
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮:ident unsigned $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt None) => {
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶: u32 = $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶;
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮: $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮 = 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮;
       if 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮 as u32 == 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 {
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭 = $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮);
           assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭, None);
       }
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident const $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶:tt) => {
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶: u32 = $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶;
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮: i32 = 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32;
       if 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮 as u32 == 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 {
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭: u32 = $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶;
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭: i32 = 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭 as i32;
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭 = $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new_const(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮);
           assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭, Some($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭)));
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭 = unsafe { $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new_unchecked(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮) };
           assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭, $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭));
           assert_eq!(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32, $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new_from_instruction(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭).into());
           assert_eq!(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32, 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭.into());
       }
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident extra ($($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮_𝓯𝓲𝓷𝓪𝓵:ident),*) $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶:tt) => {
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶: u32 = $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶;
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮: i32 = 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32;
       let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭 = $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new_const(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮);
       let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓯𝓲𝓷𝓪𝓵 = $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new_const(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮);
       assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓯𝓲𝓷𝓪𝓵, 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭.into());
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮:ident signed $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶:tt) => {
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶: u32 = $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶;
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮: $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮 = 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32 as $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮;
       if 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮 as u32 == 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 {
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭 = $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮);
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭: u32 = $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶;
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭: i32 = 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭 as i32;
           assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭, Some($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭)));
           assert_eq!(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32, 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭.unwrap().into());
       }
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮:ident unsigned $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶:tt) => {
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶: u32 = $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶;
       let 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮: $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮 = 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as $𝓲𝓷𝓽_𝓽𝔂𝓹𝓮;
       if 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮 as u32 == 𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 {
           let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭 = $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮::new(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶_𝓲𝓷_𝓽𝔂𝓹𝓮);
           if (𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32) < 0 {
               assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭, None);
           } else {
               let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭: u32 = $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶;
               let 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭: i32 = 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭 as i32;
               assert_eq!(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭, Some($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮(𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓮𝔁𝓹𝓮𝓬𝓽𝓮𝓭)));
               assert_eq!(𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 as i32, 𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶_𝓰𝓮𝓷𝓮𝓻𝓪𝓽𝓮𝓭.unwrap().into());
           }
       }
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮_𝓯𝓲𝓷𝓪𝓵:tt: $($𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt => $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶:tt),*) => {
       𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮: $($𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 => $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶),*);
       $(𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 extra $𝓲𝓶𝓶_𝓽𝔂𝓹𝓮_𝓯𝓲𝓷𝓪𝓵 $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);)*
   };
   ($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮:ident: $($𝓲𝓶𝓶_𝓯𝓸𝓻𝓶:tt => $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶:tt),*) => {
       $(
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 i8 signed $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 u8 unsigned $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 i16 signed $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 u16 unsigned $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 i32 signed $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 u32 unsigned $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 i64 signed $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 u64 unsigned $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
           𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!($𝓲𝓶𝓶_𝓽𝔂𝓹𝓮 const $𝓲𝓶𝓶_𝓯𝓸𝓻𝓶 $𝓲𝓷𝓼𝓷_𝓯𝓸𝓻𝓶);
        )*
   }
}

#[allow(non_snake_case)]
#[test]
fn test_𝐁_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐁_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞:
        0b00000000000000000000_0_000000_0000_0 => 0b0_000000_00000_00000_000_0000_0_0000000,
//        31              12  11 10   5 4  1 0     31 30  25 24 20 19 15     11 8 7 6     0
        0b00000000000000000000_0_000000_0000_1 => None,
        0b00000000000000000000_0_000000_0001_0 => 0b0_000000_00000_00000_000_0001_0_0000000,
        0b00000000000000000000_0_000000_0010_0 => 0b0_000000_00000_00000_000_0010_0_0000000,
        0b00000000000000000000_0_000000_0100_0 => 0b0_000000_00000_00000_000_0100_0_0000000,
        0b00000000000000000000_0_000000_1000_0 => 0b0_000000_00000_00000_000_1000_0_0000000,
        0b00000000000000000000_0_000001_0000_0 => 0b0_000001_00000_00000_000_0000_0_0000000,
        0b00000000000000000000_0_000010_0000_0 => 0b0_000010_00000_00000_000_0000_0_0000000,
        0b00000000000000000000_0_000100_0000_0 => 0b0_000100_00000_00000_000_0000_0_0000000,
        0b00000000000000000000_0_001000_0000_0 => 0b0_001000_00000_00000_000_0000_0_0000000,
        0b00000000000000000000_0_010000_0000_0 => 0b0_010000_00000_00000_000_0000_0_0000000,
        0b00000000000000000000_0_100000_0000_0 => 0b0_100000_00000_00000_000_0000_0_0000000,
        0b00000000000000000000_1_000000_0000_0 => 0b0_000000_00000_00000_000_0000_1_0000000,
        0b00000000000000000001_0_000000_0000_0 => None,
        0b00000000000000000010_0_000000_0000_0 => None,
        0b00000000000000000100_0_000000_0000_0 => None,
        0b00000000000000001000_0_000000_0000_0 => None,
        0b00000000000000010000_0_000000_0000_0 => None,
        0b00000000000000100000_0_000000_0000_0 => None,
        0b00000000000001000000_0_000000_0000_0 => None,
        0b00000000000010000000_0_000000_0000_0 => None,
        0b00000000000100000000_0_000000_0000_0 => None,
        0b00000000001000000000_0_000000_0000_0 => None,
        0b00000000010000000000_0_000000_0000_0 => None,
        0b00000000100000000000_0_000000_0000_0 => None,
        0b00000001000000000000_0_000000_0000_0 => None,
        0b00000010000000000000_0_000000_0000_0 => None,
        0b00000100000000000000_0_000000_0000_0 => None,
        0b00001000000000000000_0_000000_0000_0 => None,
        0b00010000000000000000_0_000000_0000_0 => None,
        0b00100000000000000000_0_000000_0000_0 => None,
        0b01000000000000000000_0_000000_0000_0 => None,
        0b10000000000000000000_0_000000_0000_0 => None,
//        31              12  11 10   5 4  1 0     31 30  25 24 20 19 15     11 8 7 6     0
        0b11111111111111111111_1_111111_1111_1 => None,
        0b11111111111111111111_1_111111_1111_0 => 0b1_111111_00000_00000_000_1111_1_0000000,
        0b11111111111111111111_1_111111_1110_0 => 0b1_111111_00000_00000_000_1110_1_0000000,
        0b11111111111111111111_1_111111_1100_0 => 0b1_111111_00000_00000_000_1100_1_0000000,
        0b11111111111111111111_1_111111_1000_0 => 0b1_111111_00000_00000_000_1000_1_0000000,
        0b11111111111111111111_1_111111_0000_0 => 0b1_111111_00000_00000_000_0000_1_0000000,
        0b11111111111111111111_1_111110_0000_0 => 0b1_111110_00000_00000_000_0000_1_0000000,
        0b11111111111111111111_1_111100_0000_0 => 0b1_111100_00000_00000_000_0000_1_0000000,
        0b11111111111111111111_1_111000_0000_0 => 0b1_111000_00000_00000_000_0000_1_0000000,
        0b11111111111111111111_1_110000_0000_0 => 0b1_110000_00000_00000_000_0000_1_0000000,
        0b11111111111111111111_1_100000_0000_0 => 0b1_100000_00000_00000_000_0000_1_0000000,
        0b11111111111111111111_1_000000_0000_0 => 0b1_000000_00000_00000_000_0000_1_0000000,
        0b11111111111111111111_0_000000_0000_0 => 0b1_000000_00000_00000_000_0000_0_0000000,
        0b11111111111111111110_0_000000_0000_0 => None,
        0b11111111111111111100_0_000000_0000_0 => None,
        0b11111111111111111000_0_000000_0000_0 => None,
        0b11111111111111110000_0_000000_0000_0 => None,
        0b11111111111111100000_0_000000_0000_0 => None,
        0b11111111111111000000_0_000000_0000_0 => None,
        0b11111111111110000000_0_000000_0000_0 => None,
        0b11111111111100000000_0_000000_0000_0 => None,
        0b11111111111000000000_0_000000_0000_0 => None,
        0b11111111110000000000_0_000000_0000_0 => None,
        0b11111111100000000000_0_000000_0000_0 => None,
        0b11111111000000000000_0_000000_0000_0 => None,
        0b11111110000000000000_0_000000_0000_0 => None,
        0b11111100000000000000_0_000000_0000_0 => None,
        0b11111000000000000000_0_000000_0000_0 => None,
        0b11110000000000000000_0_000000_0000_0 => None,
        0b11100000000000000000_0_000000_0000_0 => None,
        0b11000000000000000000_0_000000_0000_0 => None,
        0b10000000000000000000_0_000000_0000_0 => None);
}

#[allow(non_snake_case)]
#[test]
fn test_𝐜𝐬𝐫_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐜𝐬𝐫_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞 (𝐈_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞, 𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞):
        0b000000000000000000000_000000_0000_0 => 0b0_00000000000_00000_000_00000_0000000,
//        31                 11 10   5 4  1 0     31 30       20 19 15     11  7 6     0
        0b000000000000000000000_000000_0000_1 => 0b0_00000000000_00001_000_00000_0000000,
        0b000000000000000000000_000000_0001_0 => 0b0_00000000000_00010_000_00000_0000000,
        0b000000000000000000000_000000_0010_0 => 0b0_00000000000_00100_000_00000_0000000,
        0b000000000000000000000_000000_0100_0 => 0b0_00000000000_01000_000_00000_0000000,
        0b000000000000000000000_000000_1000_0 => 0b0_00000000000_10000_000_00000_0000000,
        0b000000000000000000000_000001_0000_0 => None,
        0b000000000000000000000_000010_0000_0 => None,
        0b000000000000000000000_000100_0000_0 => None,
        0b000000000000000000000_001000_0000_0 => None,
        0b000000000000000000000_010000_0000_0 => None,
        0b000000000000000000000_100000_0000_0 => None,
        0b000000000000000000001_000000_0000_0 => None,
        0b000000000000000000010_000000_0000_0 => None,
        0b000000000000000000100_000000_0000_0 => None,
        0b000000000000000001000_000000_0000_0 => None,
        0b000000000000000010000_000000_0000_0 => None,
        0b000000000000000100000_000000_0000_0 => None,
        0b000000000000001000000_000000_0000_0 => None,
        0b000000000000010000000_000000_0000_0 => None,
        0b000000000000100000000_000000_0000_0 => None,
        0b000000000001000000000_000000_0000_0 => None,
        0b000000000010000000000_000000_0000_0 => None,
        0b000000000100000000000_000000_0000_0 => None,
        0b000000001000000000000_000000_0000_0 => None,
        0b000000010000000000000_000000_0000_0 => None,
        0b000000100000000000000_000000_0000_0 => None,
        0b000001000000000000000_000000_0000_0 => None,
        0b000010000000000000000_000000_0000_0 => None,
        0b000100000000000000000_000000_0000_0 => None,
        0b001000000000000000000_000000_0000_0 => None,
        0b010000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None,
//        31                 11 10   5 4  1 0     31 30       20 19 15     11  7 6     0
        0b111111111111111111111_111111_1111_1 => None,
        0b111111111111111111111_111111_1111_0 => None,
        0b111111111111111111111_111111_1110_0 => None,
        0b111111111111111111111_111111_1100_0 => None,
        0b111111111111111111111_111111_1000_0 => None,
        0b111111111111111111111_111111_0000_0 => None,
        0b111111111111111111111_111110_0000_0 => None,
        0b111111111111111111111_111100_0000_0 => None,
        0b111111111111111111111_111000_0000_0 => None,
        0b111111111111111111111_110000_0000_0 => None,
        0b111111111111111111111_100000_0000_0 => None,
        0b111111111111111111111_000000_0000_0 => None,
        0b111111111111111111110_000000_0000_0 => None,
        0b111111111111111111100_000000_0000_0 => None,
        0b111111111111111111000_000000_0000_0 => None,
        0b111111111111111110000_000000_0000_0 => None,
        0b111111111111111100000_000000_0000_0 => None,
        0b111111111111111000000_000000_0000_0 => None,
        0b111111111111110000000_000000_0000_0 => None,
        0b111111111111100000000_000000_0000_0 => None,
        0b111111111111000000000_000000_0000_0 => None,
        0b111111111110000000000_000000_0000_0 => None,
        0b111111111100000000000_000000_0000_0 => None,
        0b111111111000000000000_000000_0000_0 => None,
        0b111111110000000000000_000000_0000_0 => None,
        0b111111100000000000000_000000_0000_0 => None,
        0b111111000000000000000_000000_0000_0 => None,
        0b111110000000000000000_000000_0000_0 => None,
        0b111100000000000000000_000000_0000_0 => None,
        0b111000000000000000000_000000_0000_0 => None,
        0b110000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None);
}

#[allow(non_snake_case)]
#[test]
fn test_𝐈_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐈_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞 (𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞):
        0b000000000000000000000_000000_0000_0 => 0b0_00000000000_00000_000_00000_0000000,
//        31                 11 10   5 4  1 0     31 30       20 19 15     11  7 6     0
        0b000000000000000000000_000000_0000_1 => 0b0_00000000001_00000_000_00000_0000000,
        0b000000000000000000000_000000_0001_0 => 0b0_00000000010_00000_000_00000_0000000,
        0b000000000000000000000_000000_0010_0 => 0b0_00000000100_00000_000_00000_0000000,
        0b000000000000000000000_000000_0100_0 => 0b0_00000001000_00000_000_00000_0000000,
        0b000000000000000000000_000000_1000_0 => 0b0_00000010000_00000_000_00000_0000000,
        0b000000000000000000000_000001_0000_0 => 0b0_00000100000_00000_000_00000_0000000,
        0b000000000000000000000_000010_0000_0 => 0b0_00001000000_00000_000_00000_0000000,
        0b000000000000000000000_000100_0000_0 => 0b0_00010000000_00000_000_00000_0000000,
        0b000000000000000000000_001000_0000_0 => 0b0_00100000000_00000_000_00000_0000000,
        0b000000000000000000000_010000_0000_0 => 0b0_01000000000_00000_000_00000_0000000,
        0b000000000000000000000_100000_0000_0 => 0b0_10000000000_00000_000_00000_0000000,
        0b000000000000000000001_000000_0000_0 => None,
        0b000000000000000000010_000000_0000_0 => None,
        0b000000000000000000100_000000_0000_0 => None,
        0b000000000000000001000_000000_0000_0 => None,
        0b000000000000000010000_000000_0000_0 => None,
        0b000000000000000100000_000000_0000_0 => None,
        0b000000000000001000000_000000_0000_0 => None,
        0b000000000000010000000_000000_0000_0 => None,
        0b000000000000100000000_000000_0000_0 => None,
        0b000000000001000000000_000000_0000_0 => None,
        0b000000000010000000000_000000_0000_0 => None,
        0b000000000100000000000_000000_0000_0 => None,
        0b000000001000000000000_000000_0000_0 => None,
        0b000000010000000000000_000000_0000_0 => None,
        0b000000100000000000000_000000_0000_0 => None,
        0b000001000000000000000_000000_0000_0 => None,
        0b000010000000000000000_000000_0000_0 => None,
        0b000100000000000000000_000000_0000_0 => None,
        0b001000000000000000000_000000_0000_0 => None,
        0b010000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None,
//        31                 11 10   5 4  1 0     31 30       20 19 15     11  7 6     0
        0b111111111111111111111_111111_1111_1 => 0b1_11111111111_00000_000_00000_0000000,
        0b111111111111111111111_111111_1111_0 => 0b1_11111111110_00000_000_00000_0000000,
        0b111111111111111111111_111111_1110_0 => 0b1_11111111100_00000_000_00000_0000000,
        0b111111111111111111111_111111_1100_0 => 0b1_11111111000_00000_000_00000_0000000,
        0b111111111111111111111_111111_1000_0 => 0b1_11111110000_00000_000_00000_0000000,
        0b111111111111111111111_111111_0000_0 => 0b1_11111100000_00000_000_00000_0000000,
        0b111111111111111111111_111110_0000_0 => 0b1_11111000000_00000_000_00000_0000000,
        0b111111111111111111111_111100_0000_0 => 0b1_11110000000_00000_000_00000_0000000,
        0b111111111111111111111_111000_0000_0 => 0b1_11100000000_00000_000_00000_0000000,
        0b111111111111111111111_110000_0000_0 => 0b1_11000000000_00000_000_00000_0000000,
        0b111111111111111111111_100000_0000_0 => 0b1_10000000000_00000_000_00000_0000000,
        0b111111111111111111111_000000_0000_0 => 0b1_00000000000_00000_000_00000_0000000,
        0b111111111111111111110_000000_0000_0 => None,
        0b111111111111111111100_000000_0000_0 => None,
        0b111111111111111111000_000000_0000_0 => None,
        0b111111111111111110000_000000_0000_0 => None,
        0b111111111111111100000_000000_0000_0 => None,
        0b111111111111111000000_000000_0000_0 => None,
        0b111111111111110000000_000000_0000_0 => None,
        0b111111111111100000000_000000_0000_0 => None,
        0b111111111111000000000_000000_0000_0 => None,
        0b111111111110000000000_000000_0000_0 => None,
        0b111111111100000000000_000000_0000_0 => None,
        0b111111111000000000000_000000_0000_0 => None,
        0b111111110000000000000_000000_0000_0 => None,
        0b111111100000000000000_000000_0000_0 => None,
        0b111111000000000000000_000000_0000_0 => None,
        0b111110000000000000000_000000_0000_0 => None,
        0b111100000000000000000_000000_0000_0 => None,
        0b111000000000000000000_000000_0000_0 => None,
        0b110000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None);
}

#[allow(non_snake_case)]
#[test]
fn test_𝐉_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐉_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞:
        0b000000000000_00000000_0_000000_0000_0 => 0b0_0000000000_0_00000_000_0000_0_0000000,
//        31        20 19   12 11 10   5 4  1 0     31 30     21 20 19 15     11 8 7 6     0
        0b000000000000_00000000_0_000000_0000_1 => None,
        0b000000000000_00000000_0_000000_0001_0 => 0b0_0000000001_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_000000_0010_0 => 0b0_0000000010_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_000000_0100_0 => 0b0_0000000100_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_000000_1000_0 => 0b0_0000001000_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_000001_0000_0 => 0b0_0000010000_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_000010_0000_0 => 0b0_0000100000_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_000100_0000_0 => 0b0_0001000000_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_001000_0000_0 => 0b0_0010000000_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_010000_0000_0 => 0b0_0100000000_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_0_100000_0000_0 => 0b0_1000000000_0_00000_000_0000_0_0000000,
        0b000000000000_00000000_1_000000_0000_0 => 0b0_0000000000_1_00000_000_0000_0_0000000,
        0b000000000000_00000001_0_000000_0000_0 => 0b0_0000000000_0_00000_001_0000_0_0000000,
        0b000000000000_00000010_0_000000_0000_0 => 0b0_0000000000_0_00000_010_0000_0_0000000,
        0b000000000000_00000100_0_000000_0000_0 => 0b0_0000000000_0_00000_100_0000_0_0000000,
        0b000000000000_00001000_0_000000_0000_0 => 0b0_0000000000_0_00001_000_0000_0_0000000,
        0b000000000000_00010000_0_000000_0000_0 => 0b0_0000000000_0_00010_000_0000_0_0000000,
        0b000000000000_00100000_0_000000_0000_0 => 0b0_0000000000_0_00100_000_0000_0_0000000,
        0b000000000000_01000000_0_000000_0000_0 => 0b0_0000000000_0_01000_000_0000_0_0000000,
        0b000000000000_10000000_0_000000_0000_0 => 0b0_0000000000_0_10000_000_0000_0_0000000,
        0b000000000001_00000000_0_000000_0000_0 => None,
        0b000000000010_00000000_0_000000_0000_0 => None,
        0b000000000100_00000000_0_000000_0000_0 => None,
        0b000000001000_00000000_0_000000_0000_0 => None,
        0b000000010000_00000000_0_000000_0000_0 => None,
        0b000000100000_00000000_0_000000_0000_0 => None,
        0b000001000000_00000000_0_000000_0000_0 => None,
        0b000010000000_00000000_0_000000_0000_0 => None,
        0b000100000000_00000000_0_000000_0000_0 => None,
        0b001000000000_00000000_0_000000_0000_0 => None,
        0b010000000000_00000000_0_000000_0000_0 => None,
        0b100000000000_00000000_0_000000_0000_0 => None,
//        31        20 19   12 11 10   5 4  1 0     31 30     21 20 19 15     11 8 7 6     0
        0b111111111111_11111111_1_111111_1111_1 => None,
        0b111111111111_11111111_1_111111_1111_0 => 0b1_1111111111_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_111111_1110_0 => 0b1_1111111110_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_111111_1100_0 => 0b1_1111111100_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_111111_1000_0 => 0b1_1111111000_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_111111_0000_0 => 0b1_1111110000_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_111110_0000_0 => 0b1_1111100000_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_111100_0000_0 => 0b1_1111000000_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_111000_0000_0 => 0b1_1110000000_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_110000_0000_0 => 0b1_1100000000_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_100000_0000_0 => 0b1_1000000000_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_1_000000_0000_0 => 0b1_0000000000_1_11111_111_0000_0_0000000,
        0b111111111111_11111111_0_000000_0000_0 => 0b1_0000000000_0_11111_111_0000_0_0000000,
        0b111111111111_11111110_0_000000_0000_0 => 0b1_0000000000_0_11111_110_0000_0_0000000,
        0b111111111111_11111100_0_000000_0000_0 => 0b1_0000000000_0_11111_100_0000_0_0000000,
        0b111111111111_11111000_0_000000_0000_0 => 0b1_0000000000_0_11111_000_0000_0_0000000,
        0b111111111111_11110000_0_000000_0000_0 => 0b1_0000000000_0_11110_000_0000_0_0000000,
        0b111111111111_11100000_0_000000_0000_0 => 0b1_0000000000_0_11100_000_0000_0_0000000,
        0b111111111111_11000000_0_000000_0000_0 => 0b1_0000000000_0_11000_000_0000_0_0000000,
        0b111111111111_10000000_0_000000_0000_0 => 0b1_0000000000_0_10000_000_0000_0_0000000,
        0b111111111111_00000000_0_000000_0000_0 => 0b1_0000000000_0_00000_000_0000_0_0000000,
        0b111111111110_00000000_0_000000_0000_0 => None,
        0b111111111100_00000000_0_000000_0000_0 => None,
        0b111111111000_00000000_0_000000_0000_0 => None,
        0b111111110000_00000000_0_000000_0000_0 => None,
        0b111111100000_00000000_0_000000_0000_0 => None,
        0b111111000000_00000000_0_000000_0000_0 => None,
        0b111110000000_00000000_0_000000_0000_0 => None,
        0b111100000000_00000000_0_000000_0000_0 => None,
        0b111000000000_00000000_0_000000_0000_0 => None,
        0b110000000000_00000000_0_000000_0000_0 => None,
        0b100000000000_00000000_0_000000_0000_0 => None);
}

#[allow(non_snake_case)]
#[test]
fn test_𝐏_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐏_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞 (𝐈_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞, 𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞):
        0b000000000000000000000_000000_0000_0 => 0b0_000000_00000_00000_000_00000_0000000,
//        31                 11 10   5 4  1 0     31 30  25 24 20 19 15     11  7 6     0
        0b000000000000000000000_000000_0000_1 => None,
        0b000000000000000000000_000000_0001_0 => None,
        0b000000000000000000000_000000_0010_0 => None,
        0b000000000000000000000_000000_0100_0 => None,
        0b000000000000000000000_000000_1000_0 => None,
        0b000000000000000000000_000001_0000_0 => 0b0_000001_00000_00000_000_00000_0000000,
        0b000000000000000000000_000010_0000_0 => 0b0_000010_00000_00000_000_00000_0000000,
        0b000000000000000000000_000100_0000_0 => 0b0_000100_00000_00000_000_00000_0000000,
        0b000000000000000000000_001000_0000_0 => 0b0_001000_00000_00000_000_00000_0000000,
        0b000000000000000000000_010000_0000_0 => 0b0_010000_00000_00000_000_00000_0000000,
        0b000000000000000000000_100000_0000_0 => 0b0_100000_00000_00000_000_00000_0000000,
        0b000000000000000000001_000000_0000_0 => None,
        0b000000000000000000010_000000_0000_0 => None,
        0b000000000000000000100_000000_0000_0 => None,
        0b000000000000000001000_000000_0000_0 => None,
        0b000000000000000010000_000000_0000_0 => None,
        0b000000000000000100000_000000_0000_0 => None,
        0b000000000000001000000_000000_0000_0 => None,
        0b000000000000010000000_000000_0000_0 => None,
        0b000000000000100000000_000000_0000_0 => None,
        0b000000000001000000000_000000_0000_0 => None,
        0b000000000010000000000_000000_0000_0 => None,
        0b000000000100000000000_000000_0000_0 => None,
        0b000000001000000000000_000000_0000_0 => None,
        0b000000010000000000000_000000_0000_0 => None,
        0b000000100000000000000_000000_0000_0 => None,
        0b000001000000000000000_000000_0000_0 => None,
        0b000010000000000000000_000000_0000_0 => None,
        0b000100000000000000000_000000_0000_0 => None,
        0b001000000000000000000_000000_0000_0 => None,
        0b010000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None,
//        31                 11 10   5 4  1 0     31 30  25 24 20 19 15     11  7 6     0
        0b111111111111111111111_111111_1111_1 => None,
        0b111111111111111111111_111111_1111_0 => None,
        0b111111111111111111111_111111_1110_0 => None,
        0b111111111111111111111_111111_1100_0 => None,
        0b111111111111111111111_111111_1000_0 => None,
        0b111111111111111111111_111111_0000_0 => 0b1_111111_00000_00000_000_00000_0000000,
        0b111111111111111111111_111110_0000_0 => 0b1_111110_00000_00000_000_00000_0000000,
        0b111111111111111111111_111100_0000_0 => 0b1_111100_00000_00000_000_00000_0000000,
        0b111111111111111111111_111000_0000_0 => 0b1_111000_00000_00000_000_00000_0000000,
        0b111111111111111111111_110000_0000_0 => 0b1_110000_00000_00000_000_00000_0000000,
        0b111111111111111111111_100000_0000_0 => 0b1_100000_00000_00000_000_00000_0000000,
        0b111111111111111111111_000000_0000_0 => 0b1_000000_00000_00000_000_00000_0000000,
        0b111111111111111111110_000000_0000_0 => None,
        0b111111111111111111100_000000_0000_0 => None,
        0b111111111111111111000_000000_0000_0 => None,
        0b111111111111111110000_000000_0000_0 => None,
        0b111111111111111100000_000000_0000_0 => None,
        0b111111111111111000000_000000_0000_0 => None,
        0b111111111111110000000_000000_0000_0 => None,
        0b111111111111100000000_000000_0000_0 => None,
        0b111111111111000000000_000000_0000_0 => None,
        0b111111111110000000000_000000_0000_0 => None,
        0b111111111100000000000_000000_0000_0 => None,
        0b111111111000000000000_000000_0000_0 => None,
        0b111111110000000000000_000000_0000_0 => None,
        0b111111100000000000000_000000_0000_0 => None,
        0b111111000000000000000_000000_0000_0 => None,
        0b111110000000000000000_000000_0000_0 => None,
        0b111100000000000000000_000000_0000_0 => None,
        0b111000000000000000000_000000_0000_0 => None,
        0b110000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None);
}

#[allow(non_snake_case)]
#[test]
fn test_𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞 (𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞):
        0b000000000000000000000_000000_0000_0 => 0b0_000000_00000_00000_000_00000_0000000,
//        31                 11 10   5 4  1 0     31 30  25 24 20 19 15     11  7 6     0
        0b000000000000000000000_000000_0000_1 => 0b0_000000_00000_00000_000_00001_0000000,
        0b000000000000000000000_000000_0001_0 => 0b0_000000_00000_00000_000_00010_0000000,
        0b000000000000000000000_000000_0010_0 => 0b0_000000_00000_00000_000_00100_0000000,
        0b000000000000000000000_000000_0100_0 => 0b0_000000_00000_00000_000_01000_0000000,
        0b000000000000000000000_000000_1000_0 => 0b0_000000_00000_00000_000_10000_0000000,
        0b000000000000000000000_000001_0000_0 => 0b0_000001_00000_00000_000_00000_0000000,
        0b000000000000000000000_000010_0000_0 => 0b0_000010_00000_00000_000_00000_0000000,
        0b000000000000000000000_000100_0000_0 => 0b0_000100_00000_00000_000_00000_0000000,
        0b000000000000000000000_001000_0000_0 => 0b0_001000_00000_00000_000_00000_0000000,
        0b000000000000000000000_010000_0000_0 => 0b0_010000_00000_00000_000_00000_0000000,
        0b000000000000000000000_100000_0000_0 => 0b0_100000_00000_00000_000_00000_0000000,
        0b000000000000000000001_000000_0000_0 => None,
        0b000000000000000000010_000000_0000_0 => None,
        0b000000000000000000100_000000_0000_0 => None,
        0b000000000000000001000_000000_0000_0 => None,
        0b000000000000000010000_000000_0000_0 => None,
        0b000000000000000100000_000000_0000_0 => None,
        0b000000000000001000000_000000_0000_0 => None,
        0b000000000000010000000_000000_0000_0 => None,
        0b000000000000100000000_000000_0000_0 => None,
        0b000000000001000000000_000000_0000_0 => None,
        0b000000000010000000000_000000_0000_0 => None,
        0b000000000100000000000_000000_0000_0 => None,
        0b000000001000000000000_000000_0000_0 => None,
        0b000000010000000000000_000000_0000_0 => None,
        0b000000100000000000000_000000_0000_0 => None,
        0b000001000000000000000_000000_0000_0 => None,
        0b000010000000000000000_000000_0000_0 => None,
        0b000100000000000000000_000000_0000_0 => None,
        0b001000000000000000000_000000_0000_0 => None,
        0b010000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None,
//        31                 11 10   5 4  1 0     31 30  25 24 20 19 15     11  7 6     0
        0b111111111111111111111_111111_1111_1 => 0b1_111111_00000_00000_000_11111_0000000,
        0b111111111111111111111_111111_1111_0 => 0b1_111111_00000_00000_000_11110_0000000,
        0b111111111111111111111_111111_1110_0 => 0b1_111111_00000_00000_000_11100_0000000,
        0b111111111111111111111_111111_1100_0 => 0b1_111111_00000_00000_000_11000_0000000,
        0b111111111111111111111_111111_1000_0 => 0b1_111111_00000_00000_000_10000_0000000,
        0b111111111111111111111_111111_0000_0 => 0b1_111111_00000_00000_000_00000_0000000,
        0b111111111111111111111_111110_0000_0 => 0b1_111110_00000_00000_000_00000_0000000,
        0b111111111111111111111_111100_0000_0 => 0b1_111100_00000_00000_000_00000_0000000,
        0b111111111111111111111_111000_0000_0 => 0b1_111000_00000_00000_000_00000_0000000,
        0b111111111111111111111_110000_0000_0 => 0b1_110000_00000_00000_000_00000_0000000,
        0b111111111111111111111_100000_0000_0 => 0b1_100000_00000_00000_000_00000_0000000,
        0b111111111111111111111_000000_0000_0 => 0b1_000000_00000_00000_000_00000_0000000,
        0b111111111111111111110_000000_0000_0 => None,
        0b111111111111111111100_000000_0000_0 => None,
        0b111111111111111111000_000000_0000_0 => None,
        0b111111111111111110000_000000_0000_0 => None,
        0b111111111111111100000_000000_0000_0 => None,
        0b111111111111111000000_000000_0000_0 => None,
        0b111111111111110000000_000000_0000_0 => None,
        0b111111111111100000000_000000_0000_0 => None,
        0b111111111111000000000_000000_0000_0 => None,
        0b111111111110000000000_000000_0000_0 => None,
        0b111111111100000000000_000000_0000_0 => None,
        0b111111111000000000000_000000_0000_0 => None,
        0b111111110000000000000_000000_0000_0 => None,
        0b111111100000000000000_000000_0000_0 => None,
        0b111111000000000000000_000000_0000_0 => None,
        0b111110000000000000000_000000_0000_0 => None,
        0b111100000000000000000_000000_0000_0 => None,
        0b111000000000000000000_000000_0000_0 => None,
        0b110000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None);
}

#[allow(non_snake_case)]
#[test]
fn test_𝐬𝐡𝐢𝐟𝐭_𝐑𝐕𝟑𝟐_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐬𝐡𝐢𝐟𝐭_𝐑𝐕𝟑𝟐_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞 (𝐈_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞, 𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞):
        0b000000000000000000000_000000_0000_0 => 0b0_00000000000_00000_000_00000_0000000,
//        31                 11 10   5 4  1 0     31 30       20 19 15     11  7 6     0
        0b000000000000000000000_000000_0000_1 => 0b0_00000000001_00000_000_00000_0000000,
        0b000000000000000000000_000000_0001_0 => 0b0_00000000010_00000_000_00000_0000000,
        0b000000000000000000000_000000_0010_0 => 0b0_00000000100_00000_000_00000_0000000,
        0b000000000000000000000_000000_0100_0 => 0b0_00000001000_00000_000_00000_0000000,
        0b000000000000000000000_000000_1000_0 => 0b0_00000010000_00000_000_00000_0000000,
        0b000000000000000000000_000001_0000_0 => None,
        0b000000000000000000000_000010_0000_0 => None,
        0b000000000000000000000_000100_0000_0 => None,
        0b000000000000000000000_001000_0000_0 => None,
        0b000000000000000000000_010000_0000_0 => None,
        0b000000000000000000000_100000_0000_0 => None,
        0b000000000000000000001_000000_0000_0 => None,
        0b000000000000000000010_000000_0000_0 => None,
        0b000000000000000000100_000000_0000_0 => None,
        0b000000000000000001000_000000_0000_0 => None,
        0b000000000000000010000_000000_0000_0 => None,
        0b000000000000000100000_000000_0000_0 => None,
        0b000000000000001000000_000000_0000_0 => None,
        0b000000000000010000000_000000_0000_0 => None,
        0b000000000000100000000_000000_0000_0 => None,
        0b000000000001000000000_000000_0000_0 => None,
        0b000000000010000000000_000000_0000_0 => None,
        0b000000000100000000000_000000_0000_0 => None,
        0b000000001000000000000_000000_0000_0 => None,
        0b000000010000000000000_000000_0000_0 => None,
        0b000000100000000000000_000000_0000_0 => None,
        0b000001000000000000000_000000_0000_0 => None,
        0b000010000000000000000_000000_0000_0 => None,
        0b000100000000000000000_000000_0000_0 => None,
        0b001000000000000000000_000000_0000_0 => None,
        0b010000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None,
//        31                 11 10   5 4  1 0     31 30       20 19 15     11  7 6     0
        0b111111111111111111111_111111_1111_1 => None,
        0b111111111111111111111_111111_1111_0 => None,
        0b111111111111111111111_111111_1110_0 => None,
        0b111111111111111111111_111111_1100_0 => None,
        0b111111111111111111111_111111_1000_0 => None,
        0b111111111111111111111_111111_0000_0 => None,
        0b111111111111111111111_111110_0000_0 => None,
        0b111111111111111111111_111100_0000_0 => None,
        0b111111111111111111111_111000_0000_0 => None,
        0b111111111111111111111_110000_0000_0 => None,
        0b111111111111111111111_100000_0000_0 => None,
        0b111111111111111111111_000000_0000_0 => None,
        0b111111111111111111110_000000_0000_0 => None,
        0b111111111111111111100_000000_0000_0 => None,
        0b111111111111111111000_000000_0000_0 => None,
        0b111111111111111110000_000000_0000_0 => None,
        0b111111111111111100000_000000_0000_0 => None,
        0b111111111111111000000_000000_0000_0 => None,
        0b111111111111110000000_000000_0000_0 => None,
        0b111111111111100000000_000000_0000_0 => None,
        0b111111111111000000000_000000_0000_0 => None,
        0b111111111110000000000_000000_0000_0 => None,
        0b111111111100000000000_000000_0000_0 => None,
        0b111111111000000000000_000000_0000_0 => None,
        0b111111110000000000000_000000_0000_0 => None,
        0b111111100000000000000_000000_0000_0 => None,
        0b111111000000000000000_000000_0000_0 => None,
        0b111110000000000000000_000000_0000_0 => None,
        0b111100000000000000000_000000_0000_0 => None,
        0b111000000000000000000_000000_0000_0 => None,
        0b110000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None);
}

#[allow(non_snake_case)]
#[test]
fn test_𝐬𝐡𝐢𝐟𝐭_𝐑𝐕𝟔𝟒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐬𝐡𝐢𝐟𝐭_𝐑𝐕𝟔𝟒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞 (𝐈_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞, 𝐒_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞):
        0b000000000000000000000_000000_0000_0 => 0b0_00000000000_00000_000_00000_0000000,
//        31                 11 10   5 4  1 0     31 30       20 19 15     11  7 6     0
        0b000000000000000000000_000000_0000_1 => 0b0_00000000001_00000_000_00000_0000000,
        0b000000000000000000000_000000_0001_0 => 0b0_00000000010_00000_000_00000_0000000,
        0b000000000000000000000_000000_0010_0 => 0b0_00000000100_00000_000_00000_0000000,
        0b000000000000000000000_000000_0100_0 => 0b0_00000001000_00000_000_00000_0000000,
        0b000000000000000000000_000000_1000_0 => 0b0_00000010000_00000_000_00000_0000000,
        0b000000000000000000000_000001_0000_0 => 0b0_00000100000_00000_000_00000_0000000,
        0b000000000000000000000_000010_0000_0 => None,
        0b000000000000000000000_000100_0000_0 => None,
        0b000000000000000000000_001000_0000_0 => None,
        0b000000000000000000000_010000_0000_0 => None,
        0b000000000000000000000_100000_0000_0 => None,
        0b000000000000000000001_000000_0000_0 => None,
        0b000000000000000000010_000000_0000_0 => None,
        0b000000000000000000100_000000_0000_0 => None,
        0b000000000000000001000_000000_0000_0 => None,
        0b000000000000000010000_000000_0000_0 => None,
        0b000000000000000100000_000000_0000_0 => None,
        0b000000000000001000000_000000_0000_0 => None,
        0b000000000000010000000_000000_0000_0 => None,
        0b000000000000100000000_000000_0000_0 => None,
        0b000000000001000000000_000000_0000_0 => None,
        0b000000000010000000000_000000_0000_0 => None,
        0b000000000100000000000_000000_0000_0 => None,
        0b000000001000000000000_000000_0000_0 => None,
        0b000000010000000000000_000000_0000_0 => None,
        0b000000100000000000000_000000_0000_0 => None,
        0b000001000000000000000_000000_0000_0 => None,
        0b000010000000000000000_000000_0000_0 => None,
        0b000100000000000000000_000000_0000_0 => None,
        0b001000000000000000000_000000_0000_0 => None,
        0b010000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None,
//        31                 11 10   5 4  1 0     31 30       20 19 15     11  7 6     0
        0b111111111111111111111_111111_1111_1 => None,
        0b111111111111111111111_111111_1111_0 => None,
        0b111111111111111111111_111111_1110_0 => None,
        0b111111111111111111111_111111_1100_0 => None,
        0b111111111111111111111_111111_1000_0 => None,
        0b111111111111111111111_111111_0000_0 => None,
        0b111111111111111111111_111110_0000_0 => None,
        0b111111111111111111111_111100_0000_0 => None,
        0b111111111111111111111_111000_0000_0 => None,
        0b111111111111111111111_110000_0000_0 => None,
        0b111111111111111111111_100000_0000_0 => None,
        0b111111111111111111111_000000_0000_0 => None,
        0b111111111111111111110_000000_0000_0 => None,
        0b111111111111111111100_000000_0000_0 => None,
        0b111111111111111111000_000000_0000_0 => None,
        0b111111111111111110000_000000_0000_0 => None,
        0b111111111111111100000_000000_0000_0 => None,
        0b111111111111111000000_000000_0000_0 => None,
        0b111111111111110000000_000000_0000_0 => None,
        0b111111111111100000000_000000_0000_0 => None,
        0b111111111111000000000_000000_0000_0 => None,
        0b111111111110000000000_000000_0000_0 => None,
        0b111111111100000000000_000000_0000_0 => None,
        0b111111111000000000000_000000_0000_0 => None,
        0b111111110000000000000_000000_0000_0 => None,
        0b111111100000000000000_000000_0000_0 => None,
        0b111111000000000000000_000000_0000_0 => None,
        0b111110000000000000000_000000_0000_0 => None,
        0b111100000000000000000_000000_0000_0 => None,
        0b111000000000000000000_000000_0000_0 => None,
        0b110000000000000000000_000000_0000_0 => None,
        0b100000000000000000000_000000_0000_0 => None);
}

#[allow(non_snake_case)]
#[test]
fn test_𝐔_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞() {
    𝖈𝖔𝖒𝖕𝖆𝖗𝖊_𝖎𝖒𝖒𝖊𝖉𝖎𝖆𝖙𝖊_𝖈𝖔𝖓𝖛𝖊𝖗𝖘𝖎𝖔𝖓!(𝐔_𝐢𝐦𝐦𝐞𝐝𝐢𝐚𝐭𝐞:
        0b0_00000000000_00000000_000000000000 => 0b00000000000000000000_00000_0000000,
//       31 30       20 19    12 11         0      31                12 11  7 6     0
        0b0_00000000000_00000000_000000000001 => None,
        0b0_00000000000_00000000_000000000010 => None,
        0b0_00000000000_00000000_000000000100 => None,
        0b0_00000000000_00000000_000000001000 => None,
        0b0_00000000000_00000000_000000010000 => None,
        0b0_00000000000_00000000_000000100000 => None,
        0b0_00000000000_00000000_000001000000 => None,
        0b0_00000000000_00000000_000010000000 => None,
        0b0_00000000000_00000000_000100000000 => None,
        0b0_00000000000_00000000_001000000000 => None,
        0b0_00000000000_00000000_010000000000 => None,
        0b0_00000000000_00000000_100000000000 => None,
        0b0_00000000000_00000001_000000000000 => 0b00000000000000000001_00000_0000000,
        0b0_00000000000_00000010_000000000000 => 0b00000000000000000010_00000_0000000,
        0b0_00000000000_00000100_000000000000 => 0b00000000000000000100_00000_0000000,
        0b0_00000000000_00001000_000000000000 => 0b00000000000000001000_00000_0000000,
        0b0_00000000000_00010000_000000000000 => 0b00000000000000010000_00000_0000000,
        0b0_00000000000_00100000_000000000000 => 0b00000000000000100000_00000_0000000,
        0b0_00000000000_01000000_000000000000 => 0b00000000000001000000_00000_0000000,
        0b0_00000000000_10000000_000000000000 => 0b00000000000010000000_00000_0000000,
        0b0_00000000001_00000000_000000000000 => 0b00000000000100000000_00000_0000000,
        0b0_00000000010_00000000_000000000000 => 0b00000000001000000000_00000_0000000,
        0b0_00000000100_00000000_000000000000 => 0b00000000010000000000_00000_0000000,
        0b0_00000001000_00000000_000000000000 => 0b00000000100000000000_00000_0000000,
        0b0_00000010000_00000000_000000000000 => 0b00000001000000000000_00000_0000000,
        0b0_00000100000_00000000_000000000000 => 0b00000010000000000000_00000_0000000,
        0b0_00001000000_00000000_000000000000 => 0b00000100000000000000_00000_0000000,
        0b0_00010000000_00000000_000000000000 => 0b00001000000000000000_00000_0000000,
        0b0_00100000000_00000000_000000000000 => 0b00010000000000000000_00000_0000000,
        0b0_01000000000_00000000_000000000000 => 0b00100000000000000000_00000_0000000,
        0b0_10000000000_00000000_000000000000 => 0b01000000000000000000_00000_0000000,
//       31 30       20 19    12 11         0      31                12 11  7 6     0
        0b1_11111111111_11111111_111111111111 => None,
        0b1_11111111111_11111111_111111111110 => None,
        0b1_11111111111_11111111_111111111100 => None,
        0b1_11111111111_11111111_111111111000 => None,
        0b1_11111111111_11111111_111111110000 => None,
        0b1_11111111111_11111111_111111100000 => None,
        0b1_11111111111_11111111_111111000000 => None,
        0b1_11111111111_11111111_111110000000 => None,
        0b1_11111111111_11111111_111100000000 => None,
        0b1_11111111111_11111111_111000000000 => None,
        0b1_11111111111_11111111_110000000000 => None,
        0b1_11111111111_11111111_100000000000 => None,
        0b1_11111111111_11111111_000000000000 => 0b11111111111111111111_00000_0000000,
        0b1_11111111111_11111110_000000000000 => 0b11111111111111111110_00000_0000000,
        0b1_11111111111_11111100_000000000000 => 0b11111111111111111100_00000_0000000,
        0b1_11111111111_11111000_000000000000 => 0b11111111111111111000_00000_0000000,
        0b1_11111111111_11110000_000000000000 => 0b11111111111111110000_00000_0000000,
        0b1_11111111111_11100000_000000000000 => 0b11111111111111100000_00000_0000000,
        0b1_11111111111_11000000_000000000000 => 0b11111111111111000000_00000_0000000,
        0b1_11111111111_10000000_000000000000 => 0b11111111111110000000_00000_0000000,
        0b1_11111111111_00000000_000000000000 => 0b11111111111100000000_00000_0000000,
        0b1_11111111110_00000000_000000000000 => 0b11111111111000000000_00000_0000000,
        0b1_11111111100_00000000_000000000000 => 0b11111111110000000000_00000_0000000,
        0b1_11111111000_00000000_000000000000 => 0b11111111100000000000_00000_0000000,
        0b1_11111110000_00000000_000000000000 => 0b11111111000000000000_00000_0000000,
        0b1_11111100000_00000000_000000000000 => 0b11111110000000000000_00000_0000000,
        0b1_11111000000_00000000_000000000000 => 0b11111100000000000000_00000_0000000,
        0b1_11110000000_00000000_000000000000 => 0b11111000000000000000_00000_0000000,
        0b1_11100000000_00000000_000000000000 => 0b11110000000000000000_00000_0000000,
        0b1_11000000000_00000000_000000000000 => 0b11100000000000000000_00000_0000000,
        0b1_10000000000_00000000_000000000000 => 0b11000000000000000000_00000_0000000,
        0b1_00000000000_00000000_000000000000 => 0b10000000000000000000_00000_0000000);
}
